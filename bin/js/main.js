"use strict";var é=function(e){return document.querySelector(e)},ç=function(e){return document.createElement(e)},Parser=function(){function e(e){var t={ajax:function(e,t){var n=new Promise(function(n,r){var i=new XMLHttpRequest,a=t;i.open(e,a),i.send(),i.onload=function(){this.status>=200&&this.status<300?n(this.response):r(this.statusText)},i.onerror=function(){r(this.statusText)}});return n}};return{get:function(){return t.ajax("GET",e)}}}return{fetchContent:function(){function t(t,n){var r=n?t:"bin/js/json/"+t+".json",i={success:function(e){e=n?e:JSON.parse(e),n?Render.getPart(e,n):Render.buildList(e,t)},error:function(e){throw new Error(e)}};e(r).get().then(i.success).catch(i.error)}var n=new Map([["header","bin/partials/header.html"],[".contact","bin/partials/contact.html"],["aside","bin/partials/aside.html"]]),r=["experience"],i=!0,a=!1,s=void 0;try{for(var o,c=n[Symbol.iterator]();!(i=(o=c.next()).done);i=!0){var l=o.value;t(l[1],l[0])}}catch(e){a=!0,s=e}finally{try{!i&&c.return&&c.return()}finally{if(a)throw s}}var d=!0,u=!1,g=void 0;try{for(var f,h=r[Symbol.iterator]();!(d=(f=h.next()).done);d=!0){var m=f.value;t(m)}}catch(e){u=!0,g=e}finally{try{!d&&h.return&&h.return()}finally{if(u)throw g}}},fetchGigs:function(){var t="//spreadsheets.google.com/feeds/list/1Tf2vRy6me9F3knQSA5FpfvrTLuNetlkd0Mmb2P20Jqo/1/public/values?alt=json",n={success:function(e){var t=JSON.parse(e),n=t.feed.entry,r=t.feed.updated.$t;r="Last updated: "+r.substr(0,10),é(".mdl-spinner").remove(),é("#scroll-tab-1 .mdl-tooltip").innerHTML=r;var i=document.getElementById("giglist");for(var a in n)if(a>0&&Gigs.gigList(n[a].gsx$headline.$t,n[a].gsx$text.$t,n[a].gsx$startdate.$t),a==n.length-1){sorttable.makeSortable(i);var s={valueNames:["gig-name","gig-location","gig-date"]};new List("attended-gigs",s)}},error:function(e){throw new Error(e)}};e(t).get().then(n.success).catch(n.error)}}}(),Render={settings:{createEl:"div",parentEl:"main"},buildList:function(e,t){function n(e,t,n){return e=ç(e),e.appendChild(document.createTextNode(t)),n&&e.setAttribute("href","//"+t),e}e=e.items;var r=é("."+t),i=ç("ul"),a=!0,s=!1,o=void 0;try{for(var c,l=e[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){for(var d=c.value,u=ç("li"),g=[n("h2",d.title),n("h3",d.position),n("time",d.dateFrom),n("span","—"),n("time",d.dateTo),d.url&&n("a",d.url,1)],f=document.createDocumentFragment(),h=0;h<g.length;h++)g[h]&&f.appendChild(g[h]);u.appendChild(f),i.appendChild(u)}}catch(e){s=!0,o=e}finally{try{!a&&l.return&&l.return()}finally{if(s)throw o}}r.appendChild(i)},getPart:function(e,t){if(~t.indexOf(".")){t=t.substr(1);var n=ç(this.settings.createEl);n.classList.add(t),n.innerHTML=e,n.onclick=Interact.toggleClicked;var r=é(this.settings.parentEl);r.appendChild(n)}else{var i=é(t);n=ç(t),n.innerHTML=e,n.onclick=Interact.toggleClicked,document.body.replaceChild(n,i),~t.indexOf("aside")&&Age.calc()}},init:function(){Request.isIndex()&&Parser.fetchContent(),Request.isPage("/gigs/")&&Parser.fetchGigs()}},Interact={toggleClicked:function(){var e=this.nodeName;if("HEADER"==e||"contact"==this.classList){var t=é("header");"clicked"==t.className?t.className="reverse":t.className="clicked"}}},Age={calc:function(){var e=é("time"),t=e.getAttribute("datetime"),n=new Date,r=[n.getFullYear(),n.getMonth()+1,("0"+n.getDate()).slice(-2)],i=[t.slice(0,4),t.slice(5,7),t.slice(8,10)];r=r.join(""),i=i.join("");var a=(r-i).toString().slice(0,2);e.innerHTML=a+","}},Request={isIndex:function(){if("/"==document.location.pathname)return!0},isPage:function(e){if(document.location.pathname==e)return!0}},Gigs={gigList:function(e,t,n){var r=document.createDocumentFragment(),i=é("#giglist tbody"),a='<td class="mdl-data-table__cell--non-numeric gig-name">\n                '+e+'\n            </td>\n            <td class="mdl-data-table__cell--non-numeric gig-location">\n                '+t+'\n            </td>\n            <td class="gig-date">'+n+"</td>",s=ç("tr");s.innerHTML=a,r.appendChild(s),i.appendChild(r)}};window.addEventListener("DOMContentLoaded",function(){Render.init()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
