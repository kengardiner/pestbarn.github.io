"use strict";var é=function(e){return document.querySelector(e)},ç=function(e){return document.createElement(e)},Parser=function(){function e(e){var t={ajax:function(e,t,n){var r=new Promise(function(n,r){var i=new XMLHttpRequest,a=t;i.open(e,a),i.send(),i.onload=function(){this.status>=200&&this.status<300?n(this.response):r(this.statusText)},i.onerror=function(){r(this.statusText)}});return r}};return{get:function(n){return t.ajax("GET",e,n)}}}return{fetchContent:function(){function t(t,n){var r=n?t:"bin/js/json/"+t+".json",i={success:function(e){var e=n?e:JSON.parse(e);n?Render.getPart(e,n):Render.build(e)},error:function(e){throw new Error(e)}};e(r).get().then(i.success).catch(i.error)}var n=new Map([["header","bin/partials/header.html"],[".contact","bin/partials/contact.html"],["aside","bin/partials/aside.html"]]),r=["experience"],i=!0,a=!1,c=void 0;try{for(var o,s=n[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var l=o.value;t(l[1],l[0])}}catch(e){a=!0,c=e}finally{try{!i&&s.return&&s.return()}finally{if(a)throw c}}var u=!0,d=!1,f=void 0;try{for(var v,h=r[Symbol.iterator]();!(u=(v=h.next()).done);u=!0){var g=v.value;t(g)}}catch(e){d=!0,f=e}finally{try{!u&&h.return&&h.return()}finally{if(d)throw f}}}}}(),Render={settings:{createEl:"div",parentEl:"main"},build:function(e){var e=e.items,t=(é(this.settings.parentEl),!0),n=!1,r=void 0;try{for(var i,a=e[Symbol.iterator]();!(t=(i=a.next()).done);t=!0){i.value}}catch(e){n=!0,r=e}finally{try{!t&&a.return&&a.return()}finally{if(n)throw r}}},getPart:function(e,t){if(~t.indexOf(".")){var t=t.substr(1),n=ç(this.settings.createEl);n.classList.add(t),n.innerHTML=e,n.onclick=Interact.toggleClicked;var r=é(this.settings.parentEl);r.appendChild(n)}else{var i=é(t),n=ç(t);n.innerHTML=e,n.onclick=Interact.toggleClicked,document.body.replaceChild(n,i),~t.indexOf("aside")&&Age.calc()}},init:function(){Parser.fetchContent()}},Interact={toggleClicked:function(){var e=é("header");"clicked"==e.className?e.className="reverse":e.className="clicked"},resetClicked:function(){var e=é(".clicked");if(void 0===e.length)e.removeAttribute("class");else for(var t=0;t<e.length;t++){var n=e[t];n.removeAttribute("class")}}},Age={calc:function(){var e=é("time"),t=e.getAttribute("datetime"),n=new Date,r=[n.getFullYear(),n.getMonth()+1,n.getDate()],i=[t.slice(0,4),t.slice(5,7),t.slice(8,10)];r=r.join(""),i=i.join("");var a=(r-i).toString().slice(0,2);e.innerHTML=a+","}};window.addEventListener("DOMContentLoaded",function(){Render.init()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
