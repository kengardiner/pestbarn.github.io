"use strict";var é=function(t){return document.querySelector(t)},ç=function(t){return document.createElement(t)},Parser=function(){function t(t){var e={ajax:function(t,e,r){var n=new Promise(function(r,n){var a=new XMLHttpRequest,i=e;a.open(t,i),a.send(),a.onload=function(){this.status>=200&&this.status<300?r(this.response):n(this.statusText)},a.onerror=function(){n(this.statusText)}});return n}};return{get:function(r){return e.ajax("GET",t,r)}}}return{fetchContent:function(){function e(e,r){var n=r?e:"bin/js/json/"+e+".json",a={success:function(t){var t=r?t:JSON.parse(t);r?Render.getPart(t,r):Render.build(t)},error:function(t){throw new Error(t)}};t(n).get().then(a.success).catch(a.error)}var r=new Map([["header","bin/partials/header.html"],[".contact","bin/partials/contact.html"]]),n=["experience"],a=!0,i=!1,s=void 0;try{for(var o,c=r[Symbol.iterator]();!(a=(o=c.next()).done);a=!0){var l=o.value;e(l[1],l[0])}}catch(t){i=!0,s=t}finally{try{!a&&c.return&&c.return()}finally{if(i)throw s}}var u=!0,d=!1,f=void 0;try{for(var v,h=n[Symbol.iterator]();!(u=(v=h.next()).done);u=!0){var m=v.value;e(m)}}catch(t){d=!0,f=t}finally{try{!u&&h.return&&h.return()}finally{if(d)throw f}}}}}(),Render={settings:{createEl:"div",parentEl:"main"},build:function(t){var t=t.items,e=(é(this.settings.parentEl),!0),r=!1,n=void 0;try{for(var a,i=t[Symbol.iterator]();!(e=(a=i.next()).done);e=!0){var s=a.value;s.title,s.url,!!s.hasOwnProperty("size")&&s.size}}catch(t){r=!0,n=t}finally{try{!e&&i.return&&i.return()}finally{if(r)throw n}}},getPart:function(t,e){if(~e.indexOf(".")){var e=e.substr(1),r=ç(this.settings.createEl);r.classList.add(e),r.innerHTML=t,r.onclick=Interact.resetClicked;var n=é(this.settings.parentEl);n.appendChild(r)}else{var a=é(e),r=ç(e);r.innerHTML=t,r.onclick=Interact.toggleClicked,document.body.replaceChild(r,a)}},init:function(){Parser.fetchContent()}},Interact={toggleClicked:function(){var t=this;t.className=t.className?t.className="":t.className="clicked"},resetClicked:function(){var t=é(".clicked");if(void 0===t.length)t.removeAttribute("class");else for(var e=0;e<t.length;e++){var r=t[e];r.removeAttribute("class")}}};window.addEventListener("DOMContentLoaded",function(){Render.init()});
//# sourceMappingURL=data:application/json;base64,
