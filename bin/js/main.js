"use strict";var é=function(t){return document.querySelector(t)},ç=function(t){return document.createElement(t)},Parser=function(){function t(t){var e={ajax:function(t,e){var n=new Promise(function(n,r){var i=new XMLHttpRequest,a=e;i.open(t,a),i.send(),i.onload=function(){this.status>=200&&this.status<300?n(this.response):r(this.statusText)},i.onerror=function(){r(this.statusText)}});return n}};return{get:function(){return e.ajax("GET",t)}}}return{fetchContent:function(){function e(e,n){var r=n?e:"bin/js/json/"+e+".json",i={success:function(t){t=n?t:JSON.parse(t),n?Render.getPart(t,n):Render.buildList(t,e)},error:function(t){throw new Error(t)}};t(r).get().then(i.success).catch(i.error)}var n=new Map([["header","bin/partials/header.html"],[".contact","bin/partials/contact.html"],["aside","bin/partials/aside.html"]]),r=["experience"],i=!0,a=!1,o=void 0;try{for(var c,s=n[Symbol.iterator]();!(i=(c=s.next()).done);i=!0){var l=c.value;e(l[1],l[0])}}catch(t){a=!0,o=t}finally{try{!i&&s.return&&s.return()}finally{if(a)throw o}}var u=!0,d=!1,f=void 0;try{for(var h,v=r[Symbol.iterator]();!(u=(h=v.next()).done);u=!0){var m=h.value;e(m)}}catch(t){d=!0,f=t}finally{try{!u&&v.return&&v.return()}finally{if(d)throw f}}}}}(),Render={settings:{createEl:"div",parentEl:"main"},buildList:function(t,e){function n(t,e,n){return t=ç(t),t.appendChild(document.createTextNode(e)),n&&t.setAttribute("href","//"+e),t}t=t.items;var r=é("."+e),i=ç("ul"),a=!0,o=!1,c=void 0;try{for(var s,l=t[Symbol.iterator]();!(a=(s=l.next()).done);a=!0){for(var u=s.value,d=ç("li"),f=[n("h2",u.title),n("h3",u.position),n("time",u.dateFrom),n("span","—"),n("time",u.dateTo),u.url&&n("a",u.url,1)],h=document.createDocumentFragment(),v=0;v<f.length;v++)f[v]&&h.appendChild(f[v]);d.appendChild(h),i.appendChild(d)}}catch(t){o=!0,c=t}finally{try{!a&&l.return&&l.return()}finally{if(o)throw c}}r.appendChild(i)},getPart:function(t,e){if(~e.indexOf(".")){e=e.substr(1);var n=ç(this.settings.createEl);n.classList.add(e),n.innerHTML=t,n.onclick=Interact.toggleClicked;var r=é(this.settings.parentEl);r.appendChild(n)}else{var i=é(e);n=ç(e),n.innerHTML=t,n.onclick=Interact.toggleClicked,document.body.replaceChild(n,i),~e.indexOf("aside")&&Age.calc()}},init:function(){Parser.fetchContent()}},Interact={toggleClicked:function(){var t=this.nodeName;if("HEADER"==t||"contact"==this.classList){var e=é("header");"clicked"==e.className?e.className="reverse":e.className="clicked"}}},Age={calc:function(){var t=é("time"),e=t.getAttribute("datetime"),n=new Date,r=[n.getFullYear(),n.getMonth()+1,n.getDate()],i=[e.slice(0,4),e.slice(5,7),e.slice(8,10)];r=r.join(""),i=i.join("");var a=(r-i).toString().slice(0,2);t.innerHTML=a+","}};window.addEventListener("DOMContentLoaded",function(){Render.init()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
